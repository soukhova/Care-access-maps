lmoran <- localmoran(access_15_DA_HAM$med_copp_isc, nbw, alternative = "two.sided")
access_15_DA_HAM$lmp <- lmoran[, 5] # p-values are in column 5
mp <- moran.plot(as.vector(scale(access_15_DA_HAM$med_copp_isc)), nbw)
access_15_DA_HAM$quadrant <- NA
# high-high
access_15_DA_HAM[(mp$x >= 0 & mp$wx >= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 1
# low-low
access_15_DA_HAM[(mp$x <= 0 & mp$wx <= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 2
# high-low
access_15_DA_HAM[(mp$x >= 0 & mp$wx <= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 3
# low-high
access_15_DA_HAM[(mp$x <= 0 & mp$wx >= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 4
# non-significant
access_15_DA_HAM[(access_15_DA_HAM$lmp > 0.05), "quadrant"] <- 5
tm_shape(access_15_DA_HAM) + tm_fill(col = "quadrant", title = "",
breaks = c(1, 2, 3, 4, 5, 6),
palette =  c("red", "blue", "lightpink", "skyblue2", "white"),
labels = c("High-High", "Low-Low", "High-Low",
"Low-High", "Non-significant")) +
tm_legend(text.size = 1)  + tm_borders(alpha = 0.5) +
tm_layout(frame = FALSE,  title = "Clusters")  +
tm_layout(legend.outside = TRUE)
nb <- poly2nb(access_15_DA_HAM , queen = TRUE) # queen shares point or border
nbw <- nb2listw(nb, style = "minmax")
lmoran <- localmoran(access_15_DA_HAM$med_copp_isc, nbw, alternative = "two.sided")
access_15_DA_HAM$lmp <- lmoran[, 5] # p-values are in column 5
mp <- moran.plot(as.vector(scale(access_15_DA_HAM$med_copp_isc)), nbw)
access_15_DA_HAM$quadrant <- NA
# high-high
access_15_DA_HAM[(mp$x >= 0 & mp$wx >= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 1
# low-low
access_15_DA_HAM[(mp$x <= 0 & mp$wx <= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 2
# high-low
access_15_DA_HAM[(mp$x >= 0 & mp$wx <= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 3
# low-high
access_15_DA_HAM[(mp$x <= 0 & mp$wx >= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 4
# non-significant
access_15_DA_HAM[(access_15_DA_HAM$lmp > 0.05), "quadrant"] <- 5
tm_shape(access_15_DA_HAM) + tm_fill(col = "quadrant", title = "",
breaks = c(1, 2, 3, 4, 5, 6),
palette =  c("red", "blue", "lightpink", "skyblue2", "white"),
labels = c("High-High", "Low-Low", "High-Low",
"Low-High", "Non-significant")) +
tm_legend(text.size = 1)  + tm_borders(alpha = 0.5) +
tm_layout(frame = FALSE,  title = "Clusters")  +
tm_layout(legend.outside = TRUE)
nb <- poly2nb(access_15_DA_HAM , queen = TRUE) # queen shares point or border
nbw <- nb2listw(nb, style = "S")
lmoran <- localmoran(access_15_DA_HAM$med_copp_isc, nbw, alternative = "two.sided")
access_15_DA_HAM$lmp <- lmoran[, 5] # p-values are in column 5
mp <- moran.plot(as.vector(scale(access_15_DA_HAM$med_copp_isc)), nbw)
access_15_DA_HAM$quadrant <- NA
# high-high
access_15_DA_HAM[(mp$x >= 0 & mp$wx >= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 1
# low-low
access_15_DA_HAM[(mp$x <= 0 & mp$wx <= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 2
# high-low
access_15_DA_HAM[(mp$x >= 0 & mp$wx <= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 3
# low-high
access_15_DA_HAM[(mp$x <= 0 & mp$wx >= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 4
# non-significant
access_15_DA_HAM[(access_15_DA_HAM$lmp > 0.05), "quadrant"] <- 5
tm_shape(access_15_DA_HAM) + tm_fill(col = "quadrant", title = "",
breaks = c(1, 2, 3, 4, 5, 6),
palette =  c("red", "blue", "lightpink", "skyblue2", "white"),
labels = c("High-High", "Low-Low", "High-Low",
"Low-High", "Non-significant")) +
tm_legend(text.size = 1)  + tm_borders(alpha = 0.5) +
tm_layout(frame = FALSE,  title = "Clusters")  +
tm_layout(legend.outside = TRUE)
nb <- poly2nb(access_15_DA_HAM , queen = TRUE) # queen shares point or border
nbw <- nb2listw(nb, style = "W")
lmoran <- localmoran(access_15_DA_HAM$med_copp_isc, nbw, alternative = "two.sided")
access_15_DA_HAM$lmp <- lmoran[, 5] # p-values are in column 5
mp <- moran.plot(as.vector(scale(access_15_DA_HAM$med_copp_isc)), nbw)
access_15_DA_HAM$quadrant <- NA
# high-high
access_15_DA_HAM[(mp$x >= 0 & mp$wx >= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 1
# low-low
access_15_DA_HAM[(mp$x <= 0 & mp$wx <= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 2
# high-low
access_15_DA_HAM[(mp$x >= 0 & mp$wx <= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 3
# low-high
access_15_DA_HAM[(mp$x <= 0 & mp$wx >= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 4
# non-significant
access_15_DA_HAM[(access_15_DA_HAM$lmp > 0.05), "quadrant"] <- 5
tm_shape(access_15_DA_HAM) + tm_fill(col = "quadrant", title = "",
breaks = c(1, 2, 3, 4, 5, 6),
palette =  c("red", "blue", "lightpink", "skyblue2", "white"),
labels = c("High-High", "Low-Low", "High-Low",
"Low-High", "Non-significant")) +
tm_legend(text.size = 1)  + tm_borders(alpha = 0.5) +
tm_layout(frame = FALSE,  title = "Clusters")  +
tm_layout(legend.outside = TRUE)
tmap_mode("view")
tm_shape(access_15_DA_HAM|> filter(quadrant == 1 | quadrant == 2)) +
tm_polygons("med_copp_isc",
palette = c("darkred", "orange", "yellow", "green"),
alpha=0.3,
breaks = c(0, 12, 19, 33.5, 107.5),
border.alpha = 0.5,
title = "Median # of care destinations (Quantiles)",
popup.vars = c("med_copp_isc", "LICO.AT","Population") ) +
tm_shape(access_15_DA_selected) + tm_borders(col="black", lwd=3)+
tm_shape(care_dest_HAM) +
tm_dots(col = "Care_Category", palette = c("brown","blue","purple","green","cyan"))+
tm_shape(Community_Boundaries_HAM) + tm_borders("grey") +
tm_legend(outside=TRUE)
lG <- localG(access_15_DA_HAM$med_copp_isc, nbw, alternative = "two.sided")
nbw <- nb2listw(include.self(nb), style = "B") #include self and the style must be binary as we do not calculate the spatial moving average for the neighborhood, but the total of the variable in the neighborhood.
lG <- localG(access_15_DA_HAM$med_copp_isc, nbw, alternative = "two.sided")
lG
lG[, 5]
lG[,3]
lG[3,]
lG |> summary(
)
lG |> summary()
lG
lG |> as.data.frame()
# adding p-values
lG <- as.numeric(lG)
lG <- data.frame(Gstar = lG, p.val = 2 * pnorm(abs(lG), lower.tail = FALSE))
access_15_DA_HAM <- cbind(access_15_DA_HAM,lG)
access_15_DA_HAM <- access_15_DA_HAM |>
mutate(Type = case_when(Gstar < 0 & p.val <= 0.05 ~ "Low Concentration",
Gstar > 0 & p.val <= 0.05 ~ "High Concentration",
TRUE ~ "Not Signicant"))
tm_shape(access_15_DA_HAM) + tm_fill(col = "Type", title = "",
palette =  c("red", "blue", "white"),
labels = c("High-High", "Low-Low", "High-Low",
"Low-High", "Non-significant")) +
tm_legend(text.size = 1)  + tm_borders(alpha = 0.5) +
tm_layout(frame = FALSE,  title = "Clusters")  +
tm_layout(legend.outside = TRUE)
View(access_15_DA_HAM)
access_15_DA_HAM$Type
tm_shape(access_15_DA_HAM) + tm_fill(col = "Type", title = "",
palette =  c("red", "blue", "white")) +
tm_legend(text.size = 1)  + tm_borders(alpha = 0.5) +
tm_layout(frame = FALSE,  title = "Clusters")  +
tm_layout(legend.outside = TRUE)
# Global Moran's I
gmoran <- moran.test(access_15_DA$med_copp_isc, nbw,
alternative = "greater")
library(shiny)
library(tmap)
library(sf)
library(dplyr)
library(tidyr)
library(r5r)
library(data.table)
library(spdep)
load("data/access_15_DA.rda")
access_15_DA <- access_15_DA |> drop_na(GeoUID)
access_15_DA <- access_15_DA |> rename("LICO-AT" = `v_CA21_1085: Prevalence of low income based on the Low-income cut-offs, after tax (LICO-AT) (%)`)
access_15_DA <- st_transform(access_15_DA,crs = 4326)
load("data/care_dest.rda")
Community_Boundaries <- st_read("data/Boundaries/Community_Boundaries.shp", quiet = TRUE)
Community_Boundaries <- st_transform(Community_Boundaries,crs = 4326)
care_dest <- care_dest |> st_set_crs(st_crs(Community_Boundaries))
# download.file(url = "https://transitfeeds.com/p/hamilton-street-railway/31/latest/download", destfile = file.path("data/Routing", "HSR-GTFS.zip"), mode = "wb") #downloading HSR latest GTFS file (15 August 2023)
#
r5r_core <- setup_r5("data/Routing/")
# extract OSM network
street_net <- street_network_to_sf(r5r_core)
main_roads <- subset(street_net$edges)
#, street_class %like% 'MOTORWAY|PRIMARY|SECONDARY'
tmap_mode("view")
p1 <- tm_shape(access_15_DA) +
tm_polygons("Population",
palette = "Greens",
style = "quantile", n=4, alpha=0.3,
border.alpha = 0.5,
title = "Population (Quantiles)",
legend.is.portrait = FALSE) +
tm_shape(care_dest) +
tm_dots(col = "Care_Category", palette = c("brown","blue","purple","green","cyan"))+
tm_shape(Community_Boundaries) + tm_borders("black") +
tm_legend(outside=TRUE)
p2 <-  tm_shape(access_15_DA) +
tm_polygons("LICO-AT",
palette = c("darkred", "orange", "yellow", "green"),
alpha=0.3,
style = "quantile", n=4,
border.alpha = 0.5,
title = "LICO-AT Prevelance (Quantiles)",
legend.is.portrait = FALSE) +
tm_shape(care_dest) +
tm_dots(col = "Care_Category", palette = c("brown","blue","purple","green","cyan"))+
tm_shape(Community_Boundaries) + tm_borders("black") +
tm_legend(outside=TRUE)
tmap_arrange(p1, p2)
tmap_mode("view")
tm_shape(access_15_DA) +
tm_polygons("med_copp_isc",
palette = c("darkred", "orange", "yellow", "green"),
alpha=0.3,
style = "quantile", n=4,
border.alpha = 0.5,
title = "Median # of care destinations (Quantiles)",
legend.is.portrait = FALSE) +
tm_shape(care_dest) +
tm_dots(col = "Care_Category", palette = c("brown","blue","purple","green","cyan"), popup.vars = c("Care_Category", "Care_Category_Specific", "Name", "F_Address"))+
tm_shape(Community_Boundaries) + tm_borders("black") +
tm_legend(outside=TRUE)
access_15_DA_selected <- access_15_DA |>
filter(GeoUID == 35250422 | GeoUID == 35250854 | GeoUID == 35250431| GeoUID ==  35250468 |
GeoUID == 35250692| GeoUID == 35250776| GeoUID == 35250775|
GeoUID == 35250321|  GeoUID == 35250753| GeoUID == 35250756| GeoUID == 35250754| GeoUID == 35250756| GeoUID == 35250755|
GeoUID == 35250969 |  GeoUID == 35250542| GeoUID == 35250968| GeoUID == 35250541|
GeoUID == 35250135| GeoUID == 35250661| GeoUID == 35251046 | GeoUID == 35250134)
care_dest_selected <-  st_intersection(care_dest,access_15_DA_selected )
tmap_mode("view")
tm_shape(access_15_DA_selected) +
tm_polygons("med_copp_isc",
palette = c("darkred", "orange", "yellow", "green"), alpha=0.3,border.alpha = 0.5,
breaks = c(0, 7, 14.5, 27, 107.5),
title = "Median # of care destinations (Quantiles)",
legend.is.portrait = FALSE,
popup.vars = c("med_copp_isc", "LICO-AT","Population")) +
tm_shape(care_dest_selected) +
tm_dots(col = "Care_Category", palette = c("brown","blue","purple","green","cyan"))+
tm_shape(Community_Boundaries) + tm_borders("black") +
tm_legend(outside=TRUE)
sf_use_s2(TRUE)
care_dest_selected_200m <- care_dest_selected |> st_buffer(dist = 200)
care_dest_selected_400m <- care_dest_selected |> st_buffer(dist = 400)
sf_use_s2(FALSE)
main_roads_selected <- st_intersection(main_roads,care_dest_selected_400m |> select(c("ID"))|> st_union())
tmap_mode("view")
tm_shape(main_roads_selected |> mutate(car_speed = round(car_speed))) +
tm_lines(col = "car_speed", lwd=2, id = "car_speed", popup.vars = c("car_speed", "bicycle_lts", "street_class")) +
tm_shape(care_dest_selected) +
tm_dots(col = "Care_Category", palette = c("brown","blue","purple","green","cyan"), alpha=0.8, legend.show = FALSE)
sf_use_s2(FALSE)
Community_Boundaries_HAM <- Community_Boundaries |> filter(COMMUNITY_ == "Hamilton")
access_15_DA_HAM <-  st_intersection(access_15_DA,Community_Boundaries_HAM )
care_dest_HAM <-  st_intersection(care_dest,Community_Boundaries_HAM )
nb <- poly2nb(access_15_DA , queen = TRUE) # queen shares point or border
nbw <- nb2listw(nb, style = "W")
# Global Moran's I
gmoran <- moran.test(access_15_DA$med_copp_isc, nbw,
alternative = "greater")
gmoran
nb <- poly2nb(access_15_DA_HAM , queen = TRUE) # queen shares point or border
nbw <- nb2listw(nb, style = "W")
lmoran <- localmoran(access_15_DA_HAM$med_copp_isc, nbw, alternative = "two.sided")
access_15_DA_HAM$lmp <- lmoran[, 5] # p-values are in column 5
mp <- moran.plot(as.vector(scale(access_15_DA_HAM$med_copp_isc)), nbw)
access_15_DA_HAM$quadrant <- NA
# high-high
access_15_DA_HAM[(mp$x >= 0 & mp$wx >= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 1
# low-low
access_15_DA_HAM[(mp$x <= 0 & mp$wx <= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 2
# high-low
access_15_DA_HAM[(mp$x >= 0 & mp$wx <= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 3
# low-high
access_15_DA_HAM[(mp$x <= 0 & mp$wx >= 0) & (access_15_DA_HAM$lmp <= 0.05), "quadrant"]<- 4
# non-significant
access_15_DA_HAM[(access_15_DA_HAM$lmp > 0.05), "quadrant"] <- 5
nb <- poly2nb(access_15_DA_HAM , queen = TRUE) # queen shares point or border
nbw <- nb2listw(nb, style = "W")
lmoran <- localmoran(access_15_DA_HAM$med_copp_isc, nbw, alternative = "two.sided")
access_15_DA_HAM$lmp <- lmoran[, 5] # p-values are in column 5
mp <- moran.plot(as.vector(scale(access_15_DA_HAM$med_copp_isc)), nbw)
mp <- moran.plot(as.vector(scale(access_15_DA_HAM$med_copp_isc)), nbw, quiet = TRUE)
mp <- moran.plot(as.vector(scale(access_15_DA_HAM$med_copp_isc)), nbw, quiet = TRUE)
mp <- moran.plot(as.vector(scale(access_15_DA_HAM$med_copp_isc)), nbw, quiet = TRUE)
dev.off()
mp <- moran.plot(as.vector(scale(access_15_DA_HAM$med_copp_isc)), nbw)
load("data/ttm_care_transit.rda")
access_15_cents <- ttm_care_transit |> filter(travel_time_p25 <= 15) |> group_by(from_id) |> summarise(copp_isc = n())
library(shiny)
library(tmap)
library(sf)
library(dplyr)
library(tidyr)
library(r5r)
library(data.table)
library(spdep)
access_15_cents <- ttm_care_transit |> filter(travel_time_p25 <= 15) |> group_by(from_id) |> summarise(copp_isc = n())
access_15_cents <- ttm_care_transit |> filter(travel_time_p25 <= 15) |> group_by(from_id) |> summarise(copp_isc = n())
access_15_cents$copp_isc
access_15_cents <- ttm_care_transit |> filter(travel_time_p25 <= 15) |> group_by(from_id) |> summarise(copp_isc = n()) |>
left_join(HAM_census_21, by="GeoUID") |> st_as_sf() |> st_make_valid()
load("data/HAM_census_21.rda")
load("data/HAM_census_21.rda")
access_15_cents <- ttm_care_transit |> filter(travel_time_p25 <= 15) |> group_by(from_id) |> summarise(copp_isc = n()) |>
left_join(HAM_census_21, by="GeoUID") |> st_as_sf() |> st_make_valid()
access_15_cents <- ttm_care_transit |> filter(travel_time_p25 <= 15) |> group_by(from_id) |> summarise(copp_isc = n()) |>
left_join(HAM_census_21, by=c("from_id"="GeoUID")) |> st_as_sf() |> st_make_valid()
tmap_mode("view")
tm_shape(access_15_cents) +
tm_polygons("copp_isc",
palette = c("darkred", "orange", "yellow", "green"),
alpha=0.3,
style = "quantile", n=4,
border.alpha = 0.5,
title = "Median # of care destinations (Quantiles)",
legend.is.portrait = FALSE) +
tm_shape(care_dest) +
tm_dots(col = "Care_Category", palette = c("brown","blue","purple","green","cyan"), popup.vars = c("Care_Category", "Care_Category_Specific", "Name", "F_Address"))+
tm_shape(Community_Boundaries) + tm_borders("black") +
tm_legend(outside=TRUE)
load("data/care_dest.rda")
load("data/care_dest.rda")
Community_Boundaries <- st_read("data/Boundaries/Community_Boundaries.shp", quiet = TRUE)
Community_Boundaries <- st_transform(Community_Boundaries,crs = 4326)
care_dest <- care_dest |> st_set_crs(st_crs(Community_Boundaries))
tmap_mode("view")
tm_shape(access_15_cents) +
tm_polygons("copp_isc",
palette = c("darkred", "orange", "yellow", "green"),
alpha=0.3,
style = "quantile", n=4,
border.alpha = 0.5,
title = "Median # of care destinations (Quantiles)",
legend.is.portrait = FALSE) +
tm_shape(care_dest) +
tm_dots(col = "Care_Category", palette = c("brown","blue","purple","green","cyan"), popup.vars = c("Care_Category", "Care_Category_Specific", "Name", "F_Address"))+
tm_shape(Community_Boundaries) + tm_borders("black") +
tm_legend(outside=TRUE)
View(access_15_cents)
access_15_cents <- ttm_care_transit |> filter(travel_time_p25 <= 15) |> group_by(from_id) |> summarise(copp_isc = n()) |>
full_join(HAM_census_21, by=c("from_id"="GeoUID")) |> st_as_sf() |> st_make_valid()
access_15_cents <- ttm_care_transit |> filter(travel_time_p25 <= 15) |> group_by(from_id) |> summarise(copp_isc = n()) |>
full_join(HAM_census_21, by=c("from_id"="GeoUID")) |> st_as_sf() |> st_make_valid() |>
mutate(copp_isc = ifelse(is.na(copp_isc), 0, copp_isc))
tmap_mode("view")
tm_shape(access_15_cents) +
tm_polygons("copp_isc",
palette = c("darkred", "orange", "yellow", "green"),
alpha=0.3,
style = "quantile", n=4,
border.alpha = 0.5,
title = "Median # of care destinations (Quantiles)",
legend.is.portrait = FALSE) +
tm_shape(care_dest) +
tm_dots(col = "Care_Category", palette = c("brown","blue","purple","green","cyan"), popup.vars = c("Care_Category", "Care_Category_Specific", "Name", "F_Address"))+
tm_shape(Community_Boundaries) + tm_borders("black") +
tm_legend(outside=TRUE)
sf_use_s2(FALSE)
Community_Boundaries_HAM <- Community_Boundaries |> filter(COMMUNITY_ == "Hamilton")
access_15_cents_HAM <-  st_intersection(access_15_cents,Community_Boundaries_HAM )
care_dest_HAM <-  st_intersection(care_dest,Community_Boundaries_HAM )
nb <- poly2nb(access_15_cents , queen = TRUE) # queen shares point or border
nbw <- nb2listw(nb, style = "W")
# Global Moran's I
gmoran <- moran.test(access_15_cents$med_copp_isc, nbw,
alternative = "greater")
# Global Moran's I
gmoran <- moran.test(access_15_cents$copp_isc, nbw,
alternative = "greater")
gmoran
nb <- poly2nb(access_15_cents_HAM , queen = TRUE) # queen shares point or border
nbw <- nb2listw(nb, style = "W")
lmoran <- localmoran(access_15_cents_HAM$copp_isc, nbw, alternative = "two.sided")
access_15_cents_HAM$lmp <- lmoran[, 5] # p-values are in column 5
mp <- moran.plot(as.vector(scale(access_15_cents_HAM$copp_isc)), nbw)
access_15_cents_HAM$quadrant <- NA
# high-high
access_15_cents_HAM[(mp$x >= 0 & mp$wx >= 0) & (access_15_cents_HAM$lmp <= 0.05), "quadrant"]<- 1
# low-low
access_15_cents_HAM[(mp$x <= 0 & mp$wx <= 0) & (access_15_cents_HAM$lmp <= 0.05), "quadrant"]<- 2
# high-low
access_15_cents_HAM[(mp$x >= 0 & mp$wx <= 0) & (access_15_cents_HAM$lmp <= 0.05), "quadrant"]<- 3
# low-high
access_15_cents_HAM[(mp$x <= 0 & mp$wx >= 0) & (access_15_cents_HAM$lmp <= 0.05), "quadrant"]<- 4
# non-significant
access_15_cents_HAM[(access_15_cents_HAM$lmp > 0.05), "quadrant"] <- 5
tm_shape(access_15_cents_HAM) + tm_fill(col = "quadrant", title = "",
breaks = c(1, 2, 3, 4, 5, 6),
palette =  c("red", "blue", "lightpink", "skyblue2", "white"),
labels = c("High-High", "Low-Low", "High-Low",
"Low-High", "Non-significant")) +
tm_legend(text.size = 1)  + tm_borders(alpha = 0.5) +
tm_layout(frame = FALSE,  title = "Clusters")  +
tm_layout(legend.outside = TRUE)
tmap_mode("view")
tm_shape(access_15_cents_HAM|> filter(quadrant == 1 | quadrant == 2)) +
tm_polygons("copp_isc",
palette = c("darkred", "orange", "yellow", "green"),
alpha=0.3,
breaks = c(0, 12, 19, 33.5, 107.5),
border.alpha = 0.5,
title = "Median # of care destinations (Quantiles)",
popup.vars = c("copp_isc", "LICO.AT","Population") ) +
tm_shape(access_15_cents_selected) + tm_borders(col="black", lwd=3)+
tm_shape(care_dest_HAM) +
tm_dots(col = "Care_Category", palette = c("brown","blue","purple","green","cyan"))+
tm_shape(Community_Boundaries_HAM) + tm_borders("grey") +
tm_legend(outside=TRUE)
nb <- poly2nb(access_15_cents_HAM , queen = TRUE) # queen shares point or border
nbw <- nb2listw(include.self(nb), style = "B") #include self and the style must be binary as we do not calculate the spatial moving average for the neighborhood, but the total of the variable in the neighborhood.
lG <- localG(access_15_cents_HAM$copp_isc, nbw, alternative = "two.sided")
# adding p-values
lG <- as.numeric(lG)
lG <- data.frame(Gstar = lG, p.val = 2 * pnorm(abs(lG), lower.tail = FALSE))
access_15_cents_HAM <- cbind(access_15_cents_HAM,lG)
access_15_cents_HAM <- access_15_cents_HAM |>
mutate(Type = case_when(Gstar < 0 & p.val <= 0.05 ~ "Low Concentration",
Gstar > 0 & p.val <= 0.05 ~ "High Concentration",
TRUE ~ "Not Signicant"))
tm_shape(access_15_cents_HAM) + tm_fill(col = "Type", title = "",
palette =  c("red", "blue", "white")) +
tm_legend(text.size = 1)  + tm_borders(alpha = 0.5) +
tm_layout(frame = FALSE,  title = "Clusters")  +
tm_layout(legend.outside = TRUE)
access_15_cents <- ttm_care_transit |> filter(travel_time_p25 <= 30) |> group_by(from_id) |> summarise(copp_isc = n()) |>
full_join(HAM_census_21, by=c("from_id"="GeoUID")) |> st_as_sf() |> st_make_valid() |>
mutate(copp_isc = ifelse(is.na(copp_isc), 0, copp_isc))
access_15_cents_HAM <-  st_intersection(access_15_cents,Community_Boundaries_HAM )
# Global Moran's I
gmoran <- moran.test(access_15_cents$copp_isc, nbw,
alternative = "greater")
nb <- poly2nb(access_15_cents , queen = TRUE) # queen shares point or border
nbw <- nb2listw(nb, style = "W")
# Global Moran's I
gmoran <- moran.test(access_15_cents$copp_isc, nbw,
alternative = "greater")
gmoran
nb <- poly2nb(access_15_cents_HAM , queen = TRUE) # queen shares point or border
nbw <- nb2listw(nb, style = "W")
lmoran <- localmoran(access_15_cents_HAM$copp_isc, nbw, alternative = "two.sided")
access_15_cents_HAM$lmp <- lmoran[, 5] # p-values are in column 5
mp <- moran.plot(as.vector(scale(access_15_cents_HAM$copp_isc)), nbw)
access_15_cents_HAM$quadrant <- NA
# high-high
access_15_cents_HAM[(mp$x >= 0 & mp$wx >= 0) & (access_15_cents_HAM$lmp <= 0.05), "quadrant"]<- 1
# low-low
access_15_cents_HAM[(mp$x <= 0 & mp$wx <= 0) & (access_15_cents_HAM$lmp <= 0.05), "quadrant"]<- 2
# high-low
access_15_cents_HAM[(mp$x >= 0 & mp$wx <= 0) & (access_15_cents_HAM$lmp <= 0.05), "quadrant"]<- 3
# low-high
access_15_cents_HAM[(mp$x <= 0 & mp$wx >= 0) & (access_15_cents_HAM$lmp <= 0.05), "quadrant"]<- 4
# non-significant
access_15_cents_HAM[(access_15_cents_HAM$lmp > 0.05), "quadrant"] <- 5
tm_shape(access_15_cents_HAM) + tm_fill(col = "quadrant", title = "",
breaks = c(1, 2, 3, 4, 5, 6),
palette =  c("red", "blue", "lightpink", "skyblue2", "white"),
labels = c("High-High", "Low-Low", "High-Low",
"Low-High", "Non-significant")) +
tm_legend(text.size = 1)  + tm_borders(alpha = 0.5) +
tm_layout(frame = FALSE,  title = "Clusters")  +
tm_layout(legend.outside = TRUE)
nb <- poly2nb(access_15_cents_HAM , queen = TRUE) # queen shares point or border
nbw <- nb2listw(include.self(nb), style = "B") #include self and the style must be binary as we do not calculate the spatial moving average for the neighborhood, but the total of the variable in the neighborhood.
lG <- localG(access_15_cents_HAM$copp_isc, nbw, alternative = "two.sided")
# adding p-values
lG <- as.numeric(lG)
lG <- data.frame(Gstar = lG, p.val = 2 * pnorm(abs(lG), lower.tail = FALSE))
access_15_cents_HAM <- cbind(access_15_cents_HAM,lG)
access_15_cents_HAM <- access_15_cents_HAM |>
mutate(Type = case_when(Gstar < 0 & p.val <= 0.05 ~ "Low Concentration",
Gstar > 0 & p.val <= 0.05 ~ "High Concentration",
TRUE ~ "Not Signicant"))
tm_shape(access_15_cents_HAM) + tm_fill(col = "Type", title = "",
palette =  c("red", "blue", "white")) +
tm_legend(text.size = 1)  + tm_borders(alpha = 0.5) +
tm_layout(frame = FALSE,  title = "Clusters")  +
tm_layout(legend.outside = TRUE)
nb <- poly2nb(access_15_cents_HAM , queen = TRUE) # queen shares point or border
nbw <- nb2listw(include.self(nb), style = "B") #include self and the style must be binary as we do not calculate the spatial moving average for the neighborhood, but the total of the variable in the neighborhood.
lG <- localG(access_15_cents_HAM$copp_isc, nbw, alternative = "two.sided")
# adding p-values
lG <- as.numeric(lG)
lG <- data.frame(Gstar = lG, p.val = 2 * pnorm(abs(lG), lower.tail = FALSE))
access_15_cents_HAM <- cbind(access_15_cents_HAM,lG)
access_15_cents_HAM <- access_15_cents_HAM |>
mutate(Type = case_when(Gstar < 0 & p.val <= 0.05 ~ "Low Concentration",
Gstar > 0 & p.val <= 0.05 ~ "High Concentration",
TRUE ~ "Not Signicant"))
access_15_DA_selected <- access_15_DA |>
filter(GeoUID == 35250422 | GeoUID == 35250854 | GeoUID == 35250431| GeoUID ==  35250468 |
GeoUID == 35250692| GeoUID == 35250776| GeoUID == 35250775|
GeoUID == 35250321|  GeoUID == 35250753| GeoUID == 35250756| GeoUID == 35250754| GeoUID == 35250756| GeoUID == 35250755|
GeoUID == 35250969 |  GeoUID == 35250542| GeoUID == 35250968| GeoUID == 35250541|
GeoUID == 35250135| GeoUID == 35250661| GeoUID == 35251046 | GeoUID == 35250134)
nb <- poly2nb(access_15_cents , queen = TRUE) # queen shares point or border
nbw <- nb2listw(nb, style = "W")
lmoran <- localmoran(access_15_cents$copp_isc, nbw, alternative = "two.sided")
access_15_cents$lmp <- lmoran[, 5] # p-values are in column 5
mp <- moran.plot(as.vector(scale(access_15_cents$copp_isc)), nbw)
access_15_cents$quadrant <- NA
# high-high
access_15_cents[(mp$x >= 0 & mp$wx >= 0) & (access_15_cents$lmp <= 0.05), "quadrant"]<- 1
# low-low
access_15_cents[(mp$x <= 0 & mp$wx <= 0) & (access_15_cents$lmp <= 0.05), "quadrant"]<- 2
# high-low
access_15_cents[(mp$x >= 0 & mp$wx <= 0) & (access_15_cents$lmp <= 0.05), "quadrant"]<- 3
# low-high
access_15_cents[(mp$x <= 0 & mp$wx >= 0) & (access_15_cents$lmp <= 0.05), "quadrant"]<- 4
# non-significant
access_15_cents[(access_15_cents$lmp > 0.05), "quadrant"] <- 5
tm_shape(access_15_cents) + tm_fill(col = "quadrant", title = "",
breaks = c(1, 2, 3, 4, 5, 6),
palette =  c("red", "blue", "lightpink", "skyblue2", "white"),
labels = c("High-High", "Low-Low", "High-Low",
"Low-High", "Non-significant")) +
tm_legend(text.size = 1)  + tm_borders(alpha = 0.5) +
tm_layout(frame = FALSE,  title = "Clusters")  +
tm_layout(legend.outside = TRUE)
tm_shape(access_15_cents) + tm_fill(col = "quadrant", title = "",
breaks = c(1, 2, 3, 4, 5, 6),
palette =  c("red", "blue", "lightpink", "skyblue2", "white"),
labels = c("High-High", "Low-Low", "High-Low",
"Low-High", "Non-significant")) +
tm_shape(Community_Boundaries) + tm_borders("black") +
tm_legend(text.size = 1)  + tm_borders(alpha = 0.5) +
tm_layout(frame = FALSE,  title = "Clusters")  +
tm_layout(legend.outside = TRUE)
